/**
 * Short version for minified scripts:
 *
 * The MIT License (MIT)
 * Copyright (c) 2022 Espen Klem
 *
 * Full license text + Third party licenses found in ./LICENSES.txt
 */

!function(t,n){"object"==typeof exports&&"undefined"!=typeof module?n(exports):"function"==typeof define&&define.amd?define(["exports"],n):n((t="undefined"!=typeof globalThis?globalThis:t||self).gsh={})}(this,(function(t){"use strict";function n(t,n,e,s=6371){const l=Math.PI,i=a(t.lat),h=a(t.lon),r=a(Number(e)),u=n/s,M=u*Math.cos(r);let c=i+M;Math.abs(c)>l/2&&(c=c>0?l-c:-l-c);const f=Math.log(Math.tan(c/2+l/4)/Math.tan(i/2+l/4)),d=Math.abs(f)>1e-11?M/f:Math.cos(i),p=h+u*Math.sin(r)/d;return{lat:o(c),lon:o(p)}}function a(t){return t*(Math.PI/180)}function o(t){return 180*t/Math.PI}t.getDistanceFromLatLonInKm=function(t,n){const o=a(n.lat-t.lat),e=a(n.lon-t.lon),s=Math.sin(o/2)*Math.sin(o/2)+Math.cos(a(t.lat))*Math.cos(a(n.lat))*Math.sin(e/2)*Math.sin(e/2);return 6371*(2*Math.atan2(Math.sqrt(s),Math.sqrt(1-s)))},t.mapBoundariesSWNE=function(t,a){const o=n(t,a,0),e=n(t,a,90),s=n(t,a,180),l=n(t,a,270);return{sw:{lat:s.lat,lon:l.lon},ne:{lat:o.lat,lon:e.lon}}},Object.defineProperty(t,"__esModule",{value:!0})}));
